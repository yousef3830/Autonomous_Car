
ATmega32_Drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000049c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000510  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800060  00800060  00000510  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000510  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000540  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  0000057c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006cd  00000000  00000000  000005e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005c3  00000000  00000000  00000cb1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000038e  00000000  00000000  00001274  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d4  00000000  00000000  00001604  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000364  00000000  00000000  000016d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000011f  00000000  00000000  00001a3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00001b5b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 a8 00 	jmp	0x150	; 0x150 <__vector_10>
  2c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a2 36       	cpi	r26, 0x62	; 98
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 4c 02 	jmp	0x498	; 0x498 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:
#include "LIB/STD_Macros.h"

int main(void)
{
	
	Timer0_FASTPWM_INIT();
  7c:	0e 94 47 00 	call	0x8e	; 0x8e <Timer0_FASTPWM_INIT>
    Timer0_SetDC(0.5);
  80:	60 e0       	ldi	r22, 0x00	; 0
  82:	70 e0       	ldi	r23, 0x00	; 0
  84:	80 e0       	ldi	r24, 0x00	; 0
  86:	9f e3       	ldi	r25, 0x3F	; 63
  88:	0e 94 61 00 	call	0xc2	; 0xc2 <Timer0_SetDC>
  8c:	ff cf       	rjmp	.-2      	; 0x8c <main+0x10>

0000008e <Timer0_FASTPWM_INIT>:
}


void Timer0_FASTPWM_INIT(){
	
	SET_BIT(TCCR0,WGM00);          //fast PWM mode
  8e:	83 b7       	in	r24, 0x33	; 51
  90:	80 64       	ori	r24, 0x40	; 64
  92:	83 bf       	out	0x33, r24	; 51
	SET_BIT(TCCR0,WGM01);
  94:	83 b7       	in	r24, 0x33	; 51
  96:	88 60       	ori	r24, 0x08	; 8
  98:	83 bf       	out	0x33, r24	; 51
	
	CLR_BIT(TCCR0,COM00);         //non inverting mode
  9a:	83 b7       	in	r24, 0x33	; 51
  9c:	8f 7e       	andi	r24, 0xEF	; 239
  9e:	83 bf       	out	0x33, r24	; 51
	SET_BIT(TCCR0,COM01);
  a0:	83 b7       	in	r24, 0x33	; 51
  a2:	80 62       	ori	r24, 0x20	; 32
  a4:	83 bf       	out	0x33, r24	; 51
	
	CLR_BIT(TCCR0,CS00);          // clock select 
  a6:	83 b7       	in	r24, 0x33	; 51
  a8:	8e 7f       	andi	r24, 0xFE	; 254
  aa:	83 bf       	out	0x33, r24	; 51
	CLR_BIT(TCCR0,CS01);
  ac:	83 b7       	in	r24, 0x33	; 51
  ae:	8d 7f       	andi	r24, 0xFD	; 253
  b0:	83 bf       	out	0x33, r24	; 51
	SET_BIT(TCCR0,CS02);
  b2:	83 b7       	in	r24, 0x33	; 51
  b4:	84 60       	ori	r24, 0x04	; 4
  b6:	83 bf       	out	0x33, r24	; 51
	
	SET_BIT(DDRB,3);             // make OC0 output
  b8:	87 b3       	in	r24, 0x17	; 23
  ba:	88 60       	ori	r24, 0x08	; 8
  bc:	87 bb       	out	0x17, r24	; 23
	
	OCR0=0;
  be:	1c be       	out	0x3c, r1	; 60
  c0:	08 95       	ret

000000c2 <Timer0_SetDC>:
}

void Timer0_SetDC(float DutyCycle){
  c2:	cf 92       	push	r12
  c4:	df 92       	push	r13
  c6:	ef 92       	push	r14
  c8:	ff 92       	push	r15
  ca:	6b 01       	movw	r12, r22
  cc:	7c 01       	movw	r14, r24
	
	if (DutyCycle==0){
  ce:	20 e0       	ldi	r18, 0x00	; 0
  d0:	30 e0       	ldi	r19, 0x00	; 0
  d2:	a9 01       	movw	r20, r18
  d4:	0e 94 36 01 	call	0x26c	; 0x26c <__cmpsf2>
  d8:	81 11       	cpse	r24, r1
  da:	02 c0       	rjmp	.+4      	; 0xe0 <Timer0_SetDC+0x1e>
		OCR0=0;
  dc:	1c be       	out	0x3c, r1	; 60
  de:	11 c0       	rjmp	.+34     	; 0x102 <Timer0_SetDC+0x40>
	}
	
	else {
	
	OCR0=(unsigned char)(256.0*DutyCycle-1.0);
  e0:	20 e0       	ldi	r18, 0x00	; 0
  e2:	30 e0       	ldi	r19, 0x00	; 0
  e4:	40 e8       	ldi	r20, 0x80	; 128
  e6:	53 e4       	ldi	r21, 0x43	; 67
  e8:	c7 01       	movw	r24, r14
  ea:	b6 01       	movw	r22, r12
  ec:	0e 94 df 01 	call	0x3be	; 0x3be <__mulsf3>
  f0:	20 e0       	ldi	r18, 0x00	; 0
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	40 e8       	ldi	r20, 0x80	; 128
  f6:	5f e3       	ldi	r21, 0x3F	; 63
  f8:	0e 94 c9 00 	call	0x192	; 0x192 <__subsf3>
  fc:	0e 94 3b 01 	call	0x276	; 0x276 <__fixunssfsi>
 100:	6c bf       	out	0x3c, r22	; 60
	}
	
}
 102:	ff 90       	pop	r15
 104:	ef 90       	pop	r14
 106:	df 90       	pop	r13
 108:	cf 90       	pop	r12
 10a:	08 95       	ret

0000010c <__vector_11>:


ISR(TIMER0_OVF_vect){
 10c:	1f 92       	push	r1
 10e:	0f 92       	push	r0
 110:	0f b6       	in	r0, 0x3f	; 63
 112:	0f 92       	push	r0
 114:	11 24       	eor	r1, r1
 116:	8f 93       	push	r24
 118:	9f 93       	push	r25
	counter +=1;
 11a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 11e:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 122:	01 96       	adiw	r24, 0x01	; 1
 124:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 128:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	
	if(counter == 16){
 12c:	40 97       	sbiw	r24, 0x10	; 16
 12e:	49 f4       	brne	.+18     	; 0x142 <__vector_11+0x36>
		counter = 0;
 130:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 134:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
		TCNT0 = 190;
 138:	8e eb       	ldi	r24, 0xBE	; 190
 13a:	82 bf       	out	0x32, r24	; 50
		
		TOG_BIT(PORTB,7);
 13c:	88 b3       	in	r24, 0x18	; 24
 13e:	80 58       	subi	r24, 0x80	; 128
 140:	88 bb       	out	0x18, r24	; 24
	}
}
 142:	9f 91       	pop	r25
 144:	8f 91       	pop	r24
 146:	0f 90       	pop	r0
 148:	0f be       	out	0x3f, r0	; 63
 14a:	0f 90       	pop	r0
 14c:	1f 90       	pop	r1
 14e:	18 95       	reti

00000150 <__vector_10>:


ISR(TIMER0_COMP_vect){
 150:	1f 92       	push	r1
 152:	0f 92       	push	r0
 154:	0f b6       	in	r0, 0x3f	; 63
 156:	0f 92       	push	r0
 158:	11 24       	eor	r1, r1
 15a:	8f 93       	push	r24
 15c:	9f 93       	push	r25
	counter+=1;
 15e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 162:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 166:	01 96       	adiw	r24, 0x01	; 1
 168:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 16c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	
	if(counter==125){
 170:	8d 37       	cpi	r24, 0x7D	; 125
 172:	91 05       	cpc	r25, r1
 174:	39 f4       	brne	.+14     	; 0x184 <__vector_10+0x34>
		counter=0;
 176:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 17a:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
		
		TOG_BIT(PORTB,7);
 17e:	88 b3       	in	r24, 0x18	; 24
 180:	80 58       	subi	r24, 0x80	; 128
 182:	88 bb       	out	0x18, r24	; 24
	}
    
	
 184:	9f 91       	pop	r25
 186:	8f 91       	pop	r24
 188:	0f 90       	pop	r0
 18a:	0f be       	out	0x3f, r0	; 63
 18c:	0f 90       	pop	r0
 18e:	1f 90       	pop	r1
 190:	18 95       	reti

00000192 <__subsf3>:
 192:	50 58       	subi	r21, 0x80	; 128

00000194 <__addsf3>:
 194:	bb 27       	eor	r27, r27
 196:	aa 27       	eor	r26, r26
 198:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <__addsf3x>
 19c:	0c 94 a5 01 	jmp	0x34a	; 0x34a <__fp_round>
 1a0:	0e 94 97 01 	call	0x32e	; 0x32e <__fp_pscA>
 1a4:	38 f0       	brcs	.+14     	; 0x1b4 <__addsf3+0x20>
 1a6:	0e 94 9e 01 	call	0x33c	; 0x33c <__fp_pscB>
 1aa:	20 f0       	brcs	.+8      	; 0x1b4 <__addsf3+0x20>
 1ac:	39 f4       	brne	.+14     	; 0x1bc <__addsf3+0x28>
 1ae:	9f 3f       	cpi	r25, 0xFF	; 255
 1b0:	19 f4       	brne	.+6      	; 0x1b8 <__addsf3+0x24>
 1b2:	26 f4       	brtc	.+8      	; 0x1bc <__addsf3+0x28>
 1b4:	0c 94 94 01 	jmp	0x328	; 0x328 <__fp_nan>
 1b8:	0e f4       	brtc	.+2      	; 0x1bc <__addsf3+0x28>
 1ba:	e0 95       	com	r30
 1bc:	e7 fb       	bst	r30, 7
 1be:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__fp_inf>

000001c2 <__addsf3x>:
 1c2:	e9 2f       	mov	r30, r25
 1c4:	0e 94 b6 01 	call	0x36c	; 0x36c <__fp_split3>
 1c8:	58 f3       	brcs	.-42     	; 0x1a0 <__addsf3+0xc>
 1ca:	ba 17       	cp	r27, r26
 1cc:	62 07       	cpc	r22, r18
 1ce:	73 07       	cpc	r23, r19
 1d0:	84 07       	cpc	r24, r20
 1d2:	95 07       	cpc	r25, r21
 1d4:	20 f0       	brcs	.+8      	; 0x1de <__addsf3x+0x1c>
 1d6:	79 f4       	brne	.+30     	; 0x1f6 <__addsf3x+0x34>
 1d8:	a6 f5       	brtc	.+104    	; 0x242 <__addsf3x+0x80>
 1da:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__fp_zero>
 1de:	0e f4       	brtc	.+2      	; 0x1e2 <__addsf3x+0x20>
 1e0:	e0 95       	com	r30
 1e2:	0b 2e       	mov	r0, r27
 1e4:	ba 2f       	mov	r27, r26
 1e6:	a0 2d       	mov	r26, r0
 1e8:	0b 01       	movw	r0, r22
 1ea:	b9 01       	movw	r22, r18
 1ec:	90 01       	movw	r18, r0
 1ee:	0c 01       	movw	r0, r24
 1f0:	ca 01       	movw	r24, r20
 1f2:	a0 01       	movw	r20, r0
 1f4:	11 24       	eor	r1, r1
 1f6:	ff 27       	eor	r31, r31
 1f8:	59 1b       	sub	r21, r25
 1fa:	99 f0       	breq	.+38     	; 0x222 <__addsf3x+0x60>
 1fc:	59 3f       	cpi	r21, 0xF9	; 249
 1fe:	50 f4       	brcc	.+20     	; 0x214 <__addsf3x+0x52>
 200:	50 3e       	cpi	r21, 0xE0	; 224
 202:	68 f1       	brcs	.+90     	; 0x25e <__addsf3x+0x9c>
 204:	1a 16       	cp	r1, r26
 206:	f0 40       	sbci	r31, 0x00	; 0
 208:	a2 2f       	mov	r26, r18
 20a:	23 2f       	mov	r18, r19
 20c:	34 2f       	mov	r19, r20
 20e:	44 27       	eor	r20, r20
 210:	58 5f       	subi	r21, 0xF8	; 248
 212:	f3 cf       	rjmp	.-26     	; 0x1fa <__addsf3x+0x38>
 214:	46 95       	lsr	r20
 216:	37 95       	ror	r19
 218:	27 95       	ror	r18
 21a:	a7 95       	ror	r26
 21c:	f0 40       	sbci	r31, 0x00	; 0
 21e:	53 95       	inc	r21
 220:	c9 f7       	brne	.-14     	; 0x214 <__addsf3x+0x52>
 222:	7e f4       	brtc	.+30     	; 0x242 <__addsf3x+0x80>
 224:	1f 16       	cp	r1, r31
 226:	ba 0b       	sbc	r27, r26
 228:	62 0b       	sbc	r22, r18
 22a:	73 0b       	sbc	r23, r19
 22c:	84 0b       	sbc	r24, r20
 22e:	ba f0       	brmi	.+46     	; 0x25e <__addsf3x+0x9c>
 230:	91 50       	subi	r25, 0x01	; 1
 232:	a1 f0       	breq	.+40     	; 0x25c <__addsf3x+0x9a>
 234:	ff 0f       	add	r31, r31
 236:	bb 1f       	adc	r27, r27
 238:	66 1f       	adc	r22, r22
 23a:	77 1f       	adc	r23, r23
 23c:	88 1f       	adc	r24, r24
 23e:	c2 f7       	brpl	.-16     	; 0x230 <__addsf3x+0x6e>
 240:	0e c0       	rjmp	.+28     	; 0x25e <__addsf3x+0x9c>
 242:	ba 0f       	add	r27, r26
 244:	62 1f       	adc	r22, r18
 246:	73 1f       	adc	r23, r19
 248:	84 1f       	adc	r24, r20
 24a:	48 f4       	brcc	.+18     	; 0x25e <__addsf3x+0x9c>
 24c:	87 95       	ror	r24
 24e:	77 95       	ror	r23
 250:	67 95       	ror	r22
 252:	b7 95       	ror	r27
 254:	f7 95       	ror	r31
 256:	9e 3f       	cpi	r25, 0xFE	; 254
 258:	08 f0       	brcs	.+2      	; 0x25c <__addsf3x+0x9a>
 25a:	b0 cf       	rjmp	.-160    	; 0x1bc <__addsf3+0x28>
 25c:	93 95       	inc	r25
 25e:	88 0f       	add	r24, r24
 260:	08 f0       	brcs	.+2      	; 0x264 <__addsf3x+0xa2>
 262:	99 27       	eor	r25, r25
 264:	ee 0f       	add	r30, r30
 266:	97 95       	ror	r25
 268:	87 95       	ror	r24
 26a:	08 95       	ret

0000026c <__cmpsf2>:
 26c:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <__fp_cmp>
 270:	08 f4       	brcc	.+2      	; 0x274 <__cmpsf2+0x8>
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	08 95       	ret

00000276 <__fixunssfsi>:
 276:	0e 94 be 01 	call	0x37c	; 0x37c <__fp_splitA>
 27a:	88 f0       	brcs	.+34     	; 0x29e <__fixunssfsi+0x28>
 27c:	9f 57       	subi	r25, 0x7F	; 127
 27e:	98 f0       	brcs	.+38     	; 0x2a6 <__fixunssfsi+0x30>
 280:	b9 2f       	mov	r27, r25
 282:	99 27       	eor	r25, r25
 284:	b7 51       	subi	r27, 0x17	; 23
 286:	b0 f0       	brcs	.+44     	; 0x2b4 <__fixunssfsi+0x3e>
 288:	e1 f0       	breq	.+56     	; 0x2c2 <__fixunssfsi+0x4c>
 28a:	66 0f       	add	r22, r22
 28c:	77 1f       	adc	r23, r23
 28e:	88 1f       	adc	r24, r24
 290:	99 1f       	adc	r25, r25
 292:	1a f0       	brmi	.+6      	; 0x29a <__fixunssfsi+0x24>
 294:	ba 95       	dec	r27
 296:	c9 f7       	brne	.-14     	; 0x28a <__fixunssfsi+0x14>
 298:	14 c0       	rjmp	.+40     	; 0x2c2 <__fixunssfsi+0x4c>
 29a:	b1 30       	cpi	r27, 0x01	; 1
 29c:	91 f0       	breq	.+36     	; 0x2c2 <__fixunssfsi+0x4c>
 29e:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <__fp_zero>
 2a2:	b1 e0       	ldi	r27, 0x01	; 1
 2a4:	08 95       	ret
 2a6:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__fp_zero>
 2aa:	67 2f       	mov	r22, r23
 2ac:	78 2f       	mov	r23, r24
 2ae:	88 27       	eor	r24, r24
 2b0:	b8 5f       	subi	r27, 0xF8	; 248
 2b2:	39 f0       	breq	.+14     	; 0x2c2 <__fixunssfsi+0x4c>
 2b4:	b9 3f       	cpi	r27, 0xF9	; 249
 2b6:	cc f3       	brlt	.-14     	; 0x2aa <__fixunssfsi+0x34>
 2b8:	86 95       	lsr	r24
 2ba:	77 95       	ror	r23
 2bc:	67 95       	ror	r22
 2be:	b3 95       	inc	r27
 2c0:	d9 f7       	brne	.-10     	; 0x2b8 <__fixunssfsi+0x42>
 2c2:	3e f4       	brtc	.+14     	; 0x2d2 <__fixunssfsi+0x5c>
 2c4:	90 95       	com	r25
 2c6:	80 95       	com	r24
 2c8:	70 95       	com	r23
 2ca:	61 95       	neg	r22
 2cc:	7f 4f       	sbci	r23, 0xFF	; 255
 2ce:	8f 4f       	sbci	r24, 0xFF	; 255
 2d0:	9f 4f       	sbci	r25, 0xFF	; 255
 2d2:	08 95       	ret

000002d4 <__fp_cmp>:
 2d4:	99 0f       	add	r25, r25
 2d6:	00 08       	sbc	r0, r0
 2d8:	55 0f       	add	r21, r21
 2da:	aa 0b       	sbc	r26, r26
 2dc:	e0 e8       	ldi	r30, 0x80	; 128
 2de:	fe ef       	ldi	r31, 0xFE	; 254
 2e0:	16 16       	cp	r1, r22
 2e2:	17 06       	cpc	r1, r23
 2e4:	e8 07       	cpc	r30, r24
 2e6:	f9 07       	cpc	r31, r25
 2e8:	c0 f0       	brcs	.+48     	; 0x31a <__fp_cmp+0x46>
 2ea:	12 16       	cp	r1, r18
 2ec:	13 06       	cpc	r1, r19
 2ee:	e4 07       	cpc	r30, r20
 2f0:	f5 07       	cpc	r31, r21
 2f2:	98 f0       	brcs	.+38     	; 0x31a <__fp_cmp+0x46>
 2f4:	62 1b       	sub	r22, r18
 2f6:	73 0b       	sbc	r23, r19
 2f8:	84 0b       	sbc	r24, r20
 2fa:	95 0b       	sbc	r25, r21
 2fc:	39 f4       	brne	.+14     	; 0x30c <__fp_cmp+0x38>
 2fe:	0a 26       	eor	r0, r26
 300:	61 f0       	breq	.+24     	; 0x31a <__fp_cmp+0x46>
 302:	23 2b       	or	r18, r19
 304:	24 2b       	or	r18, r20
 306:	25 2b       	or	r18, r21
 308:	21 f4       	brne	.+8      	; 0x312 <__fp_cmp+0x3e>
 30a:	08 95       	ret
 30c:	0a 26       	eor	r0, r26
 30e:	09 f4       	brne	.+2      	; 0x312 <__fp_cmp+0x3e>
 310:	a1 40       	sbci	r26, 0x01	; 1
 312:	a6 95       	lsr	r26
 314:	8f ef       	ldi	r24, 0xFF	; 255
 316:	81 1d       	adc	r24, r1
 318:	81 1d       	adc	r24, r1
 31a:	08 95       	ret

0000031c <__fp_inf>:
 31c:	97 f9       	bld	r25, 7
 31e:	9f 67       	ori	r25, 0x7F	; 127
 320:	80 e8       	ldi	r24, 0x80	; 128
 322:	70 e0       	ldi	r23, 0x00	; 0
 324:	60 e0       	ldi	r22, 0x00	; 0
 326:	08 95       	ret

00000328 <__fp_nan>:
 328:	9f ef       	ldi	r25, 0xFF	; 255
 32a:	80 ec       	ldi	r24, 0xC0	; 192
 32c:	08 95       	ret

0000032e <__fp_pscA>:
 32e:	00 24       	eor	r0, r0
 330:	0a 94       	dec	r0
 332:	16 16       	cp	r1, r22
 334:	17 06       	cpc	r1, r23
 336:	18 06       	cpc	r1, r24
 338:	09 06       	cpc	r0, r25
 33a:	08 95       	ret

0000033c <__fp_pscB>:
 33c:	00 24       	eor	r0, r0
 33e:	0a 94       	dec	r0
 340:	12 16       	cp	r1, r18
 342:	13 06       	cpc	r1, r19
 344:	14 06       	cpc	r1, r20
 346:	05 06       	cpc	r0, r21
 348:	08 95       	ret

0000034a <__fp_round>:
 34a:	09 2e       	mov	r0, r25
 34c:	03 94       	inc	r0
 34e:	00 0c       	add	r0, r0
 350:	11 f4       	brne	.+4      	; 0x356 <__fp_round+0xc>
 352:	88 23       	and	r24, r24
 354:	52 f0       	brmi	.+20     	; 0x36a <__fp_round+0x20>
 356:	bb 0f       	add	r27, r27
 358:	40 f4       	brcc	.+16     	; 0x36a <__fp_round+0x20>
 35a:	bf 2b       	or	r27, r31
 35c:	11 f4       	brne	.+4      	; 0x362 <__fp_round+0x18>
 35e:	60 ff       	sbrs	r22, 0
 360:	04 c0       	rjmp	.+8      	; 0x36a <__fp_round+0x20>
 362:	6f 5f       	subi	r22, 0xFF	; 255
 364:	7f 4f       	sbci	r23, 0xFF	; 255
 366:	8f 4f       	sbci	r24, 0xFF	; 255
 368:	9f 4f       	sbci	r25, 0xFF	; 255
 36a:	08 95       	ret

0000036c <__fp_split3>:
 36c:	57 fd       	sbrc	r21, 7
 36e:	90 58       	subi	r25, 0x80	; 128
 370:	44 0f       	add	r20, r20
 372:	55 1f       	adc	r21, r21
 374:	59 f0       	breq	.+22     	; 0x38c <__fp_splitA+0x10>
 376:	5f 3f       	cpi	r21, 0xFF	; 255
 378:	71 f0       	breq	.+28     	; 0x396 <__fp_splitA+0x1a>
 37a:	47 95       	ror	r20

0000037c <__fp_splitA>:
 37c:	88 0f       	add	r24, r24
 37e:	97 fb       	bst	r25, 7
 380:	99 1f       	adc	r25, r25
 382:	61 f0       	breq	.+24     	; 0x39c <__fp_splitA+0x20>
 384:	9f 3f       	cpi	r25, 0xFF	; 255
 386:	79 f0       	breq	.+30     	; 0x3a6 <__fp_splitA+0x2a>
 388:	87 95       	ror	r24
 38a:	08 95       	ret
 38c:	12 16       	cp	r1, r18
 38e:	13 06       	cpc	r1, r19
 390:	14 06       	cpc	r1, r20
 392:	55 1f       	adc	r21, r21
 394:	f2 cf       	rjmp	.-28     	; 0x37a <__fp_split3+0xe>
 396:	46 95       	lsr	r20
 398:	f1 df       	rcall	.-30     	; 0x37c <__fp_splitA>
 39a:	08 c0       	rjmp	.+16     	; 0x3ac <__fp_splitA+0x30>
 39c:	16 16       	cp	r1, r22
 39e:	17 06       	cpc	r1, r23
 3a0:	18 06       	cpc	r1, r24
 3a2:	99 1f       	adc	r25, r25
 3a4:	f1 cf       	rjmp	.-30     	; 0x388 <__fp_splitA+0xc>
 3a6:	86 95       	lsr	r24
 3a8:	71 05       	cpc	r23, r1
 3aa:	61 05       	cpc	r22, r1
 3ac:	08 94       	sec
 3ae:	08 95       	ret

000003b0 <__fp_zero>:
 3b0:	e8 94       	clt

000003b2 <__fp_szero>:
 3b2:	bb 27       	eor	r27, r27
 3b4:	66 27       	eor	r22, r22
 3b6:	77 27       	eor	r23, r23
 3b8:	cb 01       	movw	r24, r22
 3ba:	97 f9       	bld	r25, 7
 3bc:	08 95       	ret

000003be <__mulsf3>:
 3be:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__mulsf3x>
 3c2:	0c 94 a5 01 	jmp	0x34a	; 0x34a <__fp_round>
 3c6:	0e 94 97 01 	call	0x32e	; 0x32e <__fp_pscA>
 3ca:	38 f0       	brcs	.+14     	; 0x3da <__mulsf3+0x1c>
 3cc:	0e 94 9e 01 	call	0x33c	; 0x33c <__fp_pscB>
 3d0:	20 f0       	brcs	.+8      	; 0x3da <__mulsf3+0x1c>
 3d2:	95 23       	and	r25, r21
 3d4:	11 f0       	breq	.+4      	; 0x3da <__mulsf3+0x1c>
 3d6:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__fp_inf>
 3da:	0c 94 94 01 	jmp	0x328	; 0x328 <__fp_nan>
 3de:	11 24       	eor	r1, r1
 3e0:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__fp_szero>

000003e4 <__mulsf3x>:
 3e4:	0e 94 b6 01 	call	0x36c	; 0x36c <__fp_split3>
 3e8:	70 f3       	brcs	.-36     	; 0x3c6 <__mulsf3+0x8>

000003ea <__mulsf3_pse>:
 3ea:	95 9f       	mul	r25, r21
 3ec:	c1 f3       	breq	.-16     	; 0x3de <__mulsf3+0x20>
 3ee:	95 0f       	add	r25, r21
 3f0:	50 e0       	ldi	r21, 0x00	; 0
 3f2:	55 1f       	adc	r21, r21
 3f4:	62 9f       	mul	r22, r18
 3f6:	f0 01       	movw	r30, r0
 3f8:	72 9f       	mul	r23, r18
 3fa:	bb 27       	eor	r27, r27
 3fc:	f0 0d       	add	r31, r0
 3fe:	b1 1d       	adc	r27, r1
 400:	63 9f       	mul	r22, r19
 402:	aa 27       	eor	r26, r26
 404:	f0 0d       	add	r31, r0
 406:	b1 1d       	adc	r27, r1
 408:	aa 1f       	adc	r26, r26
 40a:	64 9f       	mul	r22, r20
 40c:	66 27       	eor	r22, r22
 40e:	b0 0d       	add	r27, r0
 410:	a1 1d       	adc	r26, r1
 412:	66 1f       	adc	r22, r22
 414:	82 9f       	mul	r24, r18
 416:	22 27       	eor	r18, r18
 418:	b0 0d       	add	r27, r0
 41a:	a1 1d       	adc	r26, r1
 41c:	62 1f       	adc	r22, r18
 41e:	73 9f       	mul	r23, r19
 420:	b0 0d       	add	r27, r0
 422:	a1 1d       	adc	r26, r1
 424:	62 1f       	adc	r22, r18
 426:	83 9f       	mul	r24, r19
 428:	a0 0d       	add	r26, r0
 42a:	61 1d       	adc	r22, r1
 42c:	22 1f       	adc	r18, r18
 42e:	74 9f       	mul	r23, r20
 430:	33 27       	eor	r19, r19
 432:	a0 0d       	add	r26, r0
 434:	61 1d       	adc	r22, r1
 436:	23 1f       	adc	r18, r19
 438:	84 9f       	mul	r24, r20
 43a:	60 0d       	add	r22, r0
 43c:	21 1d       	adc	r18, r1
 43e:	82 2f       	mov	r24, r18
 440:	76 2f       	mov	r23, r22
 442:	6a 2f       	mov	r22, r26
 444:	11 24       	eor	r1, r1
 446:	9f 57       	subi	r25, 0x7F	; 127
 448:	50 40       	sbci	r21, 0x00	; 0
 44a:	9a f0       	brmi	.+38     	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 44c:	f1 f0       	breq	.+60     	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
 44e:	88 23       	and	r24, r24
 450:	4a f0       	brmi	.+18     	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 452:	ee 0f       	add	r30, r30
 454:	ff 1f       	adc	r31, r31
 456:	bb 1f       	adc	r27, r27
 458:	66 1f       	adc	r22, r22
 45a:	77 1f       	adc	r23, r23
 45c:	88 1f       	adc	r24, r24
 45e:	91 50       	subi	r25, 0x01	; 1
 460:	50 40       	sbci	r21, 0x00	; 0
 462:	a9 f7       	brne	.-22     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 464:	9e 3f       	cpi	r25, 0xFE	; 254
 466:	51 05       	cpc	r21, r1
 468:	80 f0       	brcs	.+32     	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
 46a:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__fp_inf>
 46e:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__fp_szero>
 472:	5f 3f       	cpi	r21, 0xFF	; 255
 474:	e4 f3       	brlt	.-8      	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 476:	98 3e       	cpi	r25, 0xE8	; 232
 478:	d4 f3       	brlt	.-12     	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 47a:	86 95       	lsr	r24
 47c:	77 95       	ror	r23
 47e:	67 95       	ror	r22
 480:	b7 95       	ror	r27
 482:	f7 95       	ror	r31
 484:	e7 95       	ror	r30
 486:	9f 5f       	subi	r25, 0xFF	; 255
 488:	c1 f7       	brne	.-16     	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 48a:	fe 2b       	or	r31, r30
 48c:	88 0f       	add	r24, r24
 48e:	91 1d       	adc	r25, r1
 490:	96 95       	lsr	r25
 492:	87 95       	ror	r24
 494:	97 f9       	bld	r25, 7
 496:	08 95       	ret

00000498 <_exit>:
 498:	f8 94       	cli

0000049a <__stop_program>:
 49a:	ff cf       	rjmp	.-2      	; 0x49a <__stop_program>
